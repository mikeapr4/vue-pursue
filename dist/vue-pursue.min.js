/*!
 * Vue-Pursue v0.1.0
 * https://github.com/mikeapr4/vue-pursue
 * @license MIT
 */
!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.VuePursue=n():e.VuePursue=n()}(window,function(){return function(t){var r={};function u(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,u),n.l=!0,n.exports}return u.m=t,u.c=r,u.d=function(e,n,t){u.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(n,e){if(1&e&&(n=u(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(u.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)u.d(t,r,function(e){return n[e]}.bind(null,r));return t},u.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(n,"a",n),n},u.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},u.p="",u(u.s="./src/vue-pursue.js")}({"./src/vue-pursue.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n// These are methods which will refresh the computed watchers\nvar vuexApiMethods = ["registerModule", "unregisterModule", "hotUpdate"];\nvar Vue; // Marks getter watchers with the getter name, so it can be retrieved\n// in some data\'s deps.\n// app.vuex.state.task.records.__ob__.dep.subs.map((s) => s.getter.name || s.watcherName)\n\nvar vuexPlugin = function vuexPlugin(store) {\n  var markWatchers = function markWatchers(_ref) {\n    var _vm = _ref._vm;\n    Object.keys(_vm._computedWatchers).forEach(function (k) {\n      _vm._computedWatchers[k].watcherName = k;\n    });\n  };\n\n  markWatchers(store);\n  vuexApiMethods.forEach(function (method) {\n    store[method] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      store.prototype[method].apply(store, args);\n      markWatchers(store);\n    };\n  });\n}; // vnode tags are in the format: `vue-component-N-MyComponent`\n\n\nvar stripTagPrefix = function stripTagPrefix(tag) {\n  var withNum = tag.slice("vue-component-".length);\n  var index = withNum.indexOf("-");\n  return index < 0 ? "" : withNum.slice(index + 1);\n}; // Acceptable params: reactive obj / array, reactive obj and prop, or a watcher function\n// which may return a reactive obj / array\n\n\nvar pursue = function pursue(reactive, prop) {\n  var fn = typeof reactive === "function" ? reactive : prop ? function () {\n    return reactive[prop];\n  } : function () {\n    return reactive;\n  };\n  var retval = fn();\n  var subs = new Set();\n\n  if (retval.__ob__) {\n    retval.__ob__.dep.subs.forEach(function (s) {\n      return subs.add(s);\n    });\n  } // here we need to add a watcher on the prop in order to pull the dep\n\n\n  var tempVm = new Vue();\n  tempVm.$watch(fn, function () {});\n  var tempWatch = tempVm._watchers[0]; // now pull the subs from the deps ;)\n\n  tempWatch.deps.forEach(function (dep) {\n    return dep.subs.filter(function (s) {\n      return s !== tempWatch;\n    }).forEach(function (s) {\n      return subs.add(s);\n    });\n  });\n  var unrecognised = 0;\n  var computed = [];\n  var components = [];\n  subs.forEach(function (sub) {\n    // computed on component\n    if (sub.getter.name) {\n      var comp = sub.vm.name || sub.vm.$vnode && sub.vm.$vnode.tag && stripTagPrefix(sub.vm.$vnode.tag);\n\n      if (sub.getter.name === "updateComponent" && sub.expression.includes("vm._update")) {\n        if (comp) {\n          components.push(comp);\n        } else {\n          unrecognised++;\n        }\n      } else if (!["mappedState", "mappedGetter"].includes(sub.getter.name)) {\n        computed.push("".concat(comp && comp + ".").concat(sub.getter.name));\n      }\n    } // vuex getter\n    else if (sub.watcherName) {\n        computed.push(sub.watcherName);\n      }\n  });\n  return {\n    computed: computed,\n    components: components,\n    unrecognised: unrecognised\n  };\n}; // Add pursue to the Vue global\n\n\nvar install = function install(_Vue) {\n  Vue = _Vue;\n  Vue.pursue = pursue;\n\n  if (window) {\n    window.VuePursue = pursue;\n  }\n}; // Exports Dual Vue/Vuex Plugin\n\n\nvar dualPlugin = function dualPlugin(store) {\n  install(store._vm.constructor);\n  vuexPlugin(store);\n};\n\ndualPlugin.install = install;\n/* harmony default export */ __webpack_exports__["default"] = (dualPlugin);\n\n//# sourceURL=webpack://VuePursue/./src/vue-pursue.js?')}})});